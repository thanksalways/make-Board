<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans.xsd
	  http://www.springframework.org/schema/context 
	  http://www.springframework.org/schema/context/spring-context.xsd
	  http://www.springframework.org/schema/util 
	  http://www.springframework.org/schema/util/spring-util-4.0.xsd
	  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- root-context.xml : mvc 설정과 관련된 여러 처리를 담당하는 설정 파일 (ex: DAO, VO, service...) 
		xml의 형태를 어떻게 사용할 것인가 빈(객체)들을 관리하는 문서(xml)이다. 필요할 때마다 주입해서 사용하기 위해 이곳에 빈을 
		등록해둔다. (bean태그를 사용해서 등록한다. id="빈의 이름" class="클래스의 위치") 다운받은 라이브러리들을 사용하는 
		곳 -->

	<!-- properties 파일 로딩하기 -->
	<!-- 이런 형태도 있음 -->
	<!-- <context:property-placeholder location="classpath:/property/globals.properties" 
		/> -->
	<!-- properties 파일 로딩하기 -->
	<!-- <util:properties id="dbprops" location="classpath:/property/globals.properties" 
		/> -->

	<!-- [DB 관련 설정 : DB 관련 정보를 커넥션 풀 객체에 담는 설정] -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/jingtest" />
		<property name="username" value="root" />
		<property name="password" value="tex01" />
	</bean>

	<!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource" /> <property name="configLocation" 
		value="classpath:/mybatis-config.xml" /> <property name="mapperLocations" 
		value="classpath*:mappers/**/*Mapper.xml" /> </bean> -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>

		<property name="configLocation"
			value="classpath:/mybatis-config.xml"></property>

		<property name="mapperLocations"
			value="classpath:mappers/**/*Mapper.xml"></property>
	</bean>

	<!-- 생성자를 통한 의존성 주입 -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--  파일 업로드 경로를 설정 -->
	<bean id="uploadPath" class="java.lang.String">
		<constructor-arg
			value="C:\\Users\\cameldev\\eclipse-workspace\\mypage\\src\\main\\webapp\\resources\\upload">
		</constructor-arg>
	</bean>


	<tx:annotation-driven />

	<context:component-scan
		base-package="com.cameldev.mypage" />
</beans>